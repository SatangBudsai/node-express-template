{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"DefaultSelection_Prisma._36_userPayload_": {
				"properties": {
					"update_time": {
						"type": "string",
						"format": "date-time"
					},
					"created_time": {
						"type": "string",
						"format": "date-time"
					},
					"profile": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"user_key": {
						"type": "string"
					},
					"app_id": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"update_time",
					"created_time",
					"profile",
					"name",
					"user_key",
					"app_id",
					"id"
				],
				"type": "object"
			},
			"user": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_userPayload_",
				"description": "Model user\nThis model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments\nThis model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info."
			},
			"mockData": {
				"properties": {
					"tel": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"tel",
					"name"
				],
				"type": "object"
			},
			"ApiResponseType_mockData_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/mockData"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"success",
							"error"
						]
					}
				},
				"required": [
					"code",
					"message",
					"status"
				],
				"type": "object"
			},
			"PingResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"massage_type": {
				"enum": [
					"text",
					"image"
				],
				"type": "string"
			},
			"messageCreateType": {
				"properties": {
					"update_time": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"created_time": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"user_read": {
						"nullable": true
					},
					"message": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"allOf": [
							{
								"$ref": "#/components/schemas/massage_type"
							}
						],
						"nullable": true
					},
					"conversation_id": {
						"type": "string"
					},
					"sender_id": {
						"type": "string"
					}
				},
				"required": [
					"sender_id"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "node-express-template",
		"version": "1.0.0",
		"description": "API Service Node Express Template",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"paths": {
		"/user/all": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/success": {
			"get": {
				"operationId": "GetSuccess",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponseType_mockData_"
								}
							}
						}
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/error": {
			"get": {
				"operationId": "GetError",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/not-found": {
			"get": {
				"operationId": "GetNotFound",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/validation-error": {
			"get": {
				"operationId": "GetValidationError",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/unauthorized": {
			"get": {
				"operationId": "GetUnauthorized",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/forbidden": {
			"get": {
				"operationId": "GetForbidden",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/bad-request": {
			"get": {
				"operationId": "GetBadRequest",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/conflict": {
			"get": {
				"operationId": "GetConflict",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/response/internal-server-error": {
			"get": {
				"operationId": "GetInternalServerError",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Response"
				],
				"security": [],
				"parameters": []
			}
		},
		"/ping": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ping"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ping"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/messageCreateType"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ping"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "id2",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}